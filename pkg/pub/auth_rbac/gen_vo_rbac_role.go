/**
* @author long.qian
*/

package auth_rbac

// =================================================================================
// Code generated by LazyFrame Gen tool. DO NOT EDIT.
// If you want to develop the code, write the file [ gen_vo_rbac_role.go]  in the same directory.
// =================================================================================

import (
	"github.com/go-lazy-frame/go-lazy-frame/pkg/pub/query"
	"github.com/go-lazy-frame/go-lazy-frame/pkg/pub/util"
)

type RbacRoleVo struct {
	// Id
    Id uint `json:"id"`
	// CreatedAt
    CreatedAt string `json:"createdAt"`
	// UpdatedAt
    UpdatedAt string `json:"updatedAt"`
	// 角色名
    RoleName string `json:"roleName"`
	// 角色描述
    RoleDesc string `json:"roleDesc"`
	// 是否可用
    Valid bool `json:"valid"`
}

// Transform 从实体 RbacRole 转换为 Vo
func (RbacRoleVo) Transform(m RbacRole) RbacRoleVo {
	vo := RbacRoleVo{}
	vo.Id = m.ID
	vo.CreatedAt = util.TimeUtil.GetTimeFormatByFormat(m.CreatedAt, util.GolangBirthTime)
	vo.UpdatedAt = util.TimeUtil.GetTimeFormatByFormat(m.UpdatedAt, util.GolangBirthTime)
	vo.RoleName = m.RoleName
	vo.RoleDesc = m.RoleDesc
	vo.Valid = m.Valid
	return vo
}

// TransformTo 从 RbacRoleVo 转换为 实体
func (me RbacRoleVo) TransformTo() RbacRole {
	model := RbacRole{}
	model.ID = me.Id
	model.CreatedAt = *util.TimeUtil.TimeParseByFormat(me.CreatedAt, util.GolangBirthTime)
	model.UpdatedAt = *util.TimeUtil.TimeParseByFormat(me.UpdatedAt, util.GolangBirthTime)
	model.RoleName = me.RoleName
	model.RoleDesc = me.RoleDesc
	model.Valid = me.Valid
	return model
}

type RbacRolePageVo struct {
	query.Page
	Result []RbacRoleVo
}
