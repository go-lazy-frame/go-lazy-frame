/**
* @author long.qian
*/

package auth_rbac

// =================================================================================
// Code generated by LazyFrame Gen tool. DO NOT EDIT.
// If you want to develop the code, write the file [ gen_vo_rbac_token.go]  in the same directory.
// =================================================================================

import (
	"github.com/go-lazy-frame/go-lazy-frame/pkg/pub/query"
	"github.com/go-lazy-frame/go-lazy-frame/pkg/pub/util"
)

type RbacTokenVo struct {
	// CreatedAt
    CreatedAt string `json:"createdAt"`
	// DeletedAt
    DeletedAt string `json:"deletedAt"`
	// Id
    Id uint `json:"id"`
	// Token
    Token string `json:"token"`
	// UpdatedAt
    UpdatedAt string `json:"updatedAt"`
	// 用户ID
    UserId uint `json:"userId"`
}

// Transform 从实体 RbacToken 转换为 Vo
func (RbacTokenVo) Transform(m RbacToken) RbacTokenVo {
	vo := RbacTokenVo{}
	vo.CreatedAt = util.TimeUtil.GetTimeFormatByFormat(m.CreatedAt, util.GolangBirthTime)
	vo.Id = m.ID
	vo.Token = m.Token
	vo.UpdatedAt = util.TimeUtil.GetTimeFormatByFormat(m.UpdatedAt, util.GolangBirthTime)
	vo.UserId = m.UserId
	return vo
}

// TransformTo 从 RbacTokenVo 转换为 实体
func (me RbacTokenVo) TransformTo() RbacToken {
	model := RbacToken{}
	model.CreatedAt = *util.TimeUtil.TimeParseByFormat(me.CreatedAt, util.GolangBirthTime)
	model.ID = me.Id
	model.Token = me.Token
	model.UpdatedAt = *util.TimeUtil.TimeParseByFormat(me.UpdatedAt, util.GolangBirthTime)
	model.UserId = me.UserId
	return model
}

type RbacTokenPageVo struct {
	query.Page
	Result []RbacTokenVo
}
